<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/halo"
		 xmlns:mx="library://ns.adobe.com/flex/mx"  
		 creationComplete="completeHandler()"
		 updateComplete="canvas1_updateCompleteHandler(event)" xmlns:s1="library://ns.adobe.com/flex/spark">

	<fx:Script>
		<![CDATA[
			import com.hurlant.util.der.Integer;
			
			import flexmdi.events.MinnMessageEvent;
			import flexmdi.events.MinnMessageEventManager;
			
			import minn.common.Circle;
			import minn.common.DrawLine;
			import minn.common.Triangle;
			
			import mvc.model.merchandise.vo.Product;
			import mvc.view.front.product.event.ProductListEvent;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.utils.StringUtil;
			import mx.validators.Validator;
			
			import skin.BookBtnSkin;
			import skin.ShopCardBtn;
			
			[Bindable]
			public var product:Product;
//			private var cir:Circle=new Circle();
			private function completeHandler():void{

				var dl:DrawLine=new DrawLine();
				dl.draw2Line(10,400,280,400);
				addChild(dl);
//				cir.drawCircle(close_id.x+16,close_id.y+15,15,0x0a10f2,2);
//				addChild(cir);
//				cir.alpha=0.4;
//				cir.visible=false;
				
				var tri:Triangle=new Triangle();
				var v:Vector.<Number>=new Vector.<Number>();
				v.push(200, 20);
				v.push(250, 200);
				v.push(20, 440);
				tri.drawTriangle(v,0xc2be9e);
				this.addElement(tri);
				this.setElementIndex(tri,0);
			}
			
			protected function modify_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
//				MinnMessageEventManager
				var validatorErrorArray:Array = Validator.validateAll(validatorArray); 
				var err:ValidationResultEvent; 
				var errorMessageArray:Array = []; 
				if(validatorErrorArray.length>0){
					for each (err in validatorErrorArray) { 
						errorMessageArray.push(err.message); 
					} 
					
					if(errorMessageArray.length >0){
						Alert.show(errorMessageArray.join("\n\n"), "请按照以下错误提示信息重新填写", Alert.OK);
						
						return;
					}
				}
		
				var evt:ProductListEvent=new ProductListEvent(ProductListEvent.PRODUCT_QTY_CHANGE_BY_ORDER,true);
				product._qty=int(qty_id.text);
//				var evt:ProductListEvent = new ProductListEvent(ProductListEvent.PRODUCT_QTY_CHANGE,true);
				evt.product = product;
//				dispatchEvent(evt);
//				e.product=product;
				parentDocument.orderProductConfig_id.reCount();
//				MinnMessageEventManager.getInstance().dispatchEvent(evt);
				dispatchEvent(evt);
			}

			protected function close_id_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
//				cir.visible=true;
			}


			protected function close_id_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
//				cir.visible=false;
			}


			protected function numbervalidator1_invalidHandler(event:ValidationResultEvent):void
			{
				// TODO Auto-generated method stub
//				Alert.show("请输入整型值!","提示");
			}


			protected function canvas1_updateCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				if(this.parentDocument!=null&&this.parentDocument.method=="showDetail"){
					qtybtn.visible=false;
					
				}else{
					qtybtn.visible=true;
				}
			}

		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->		
		<fx:Array id="validatorArray">
			<mx:NumberValidator source="{qty_id}" property="text" integerError="请输入整形!" invalidCharError="请输入整形!" invalidFormatCharsError="请输入整形!"
								minValue="1"  domain="int"
								trigger="{qtybtn}" triggerEvent="click"
								/>
		</fx:Array>
		
		

	</fx:Declarations>
	<mx:VBox paddingLeft="25" verticalGap="3">
	<mx:Label paddingLeft="90" text="详细信息" fontSize="16"/>
	<mx:HBox horizontalGap="0">
		<mx:Label text="名称:"/><mx:Label id="name_id" text="{product.name}"/>
	</mx:HBox>
	<mx:HBox horizontalGap="0">
		<mx:Label text="单价(人民币):"/><mx:Label id="price_id" text="{product.price}"/>
	</mx:HBox>
	<mx:HBox horizontalGap="0">
		<mx:Label text="购买件数:"/><mx:TextInput id="qty_id" width="40" text="{product._qty}"/><mx:Label text="件"/><s1:Button styleName="bookbtn" id="qtybtn" enabled="false" label="修改" skinClass="{skin.ShopCardBtn}" useHandCursor="true" buttonMode="true" click="modify_clickHandler(event)"/>
	</mx:HBox>
	<mx:HBox horizontalGap="0">
		<mx:Label text="上架时间:"/><mx:Label id="upTime_id" text="{product.upTime}"/>
	</mx:HBox>
	<mx:HBox horizontalGap="0">
		<mx:Label text="下架时间:"/><mx:Label id="downTime_id"  text="{product.downTime}"/>
	</mx:HBox>
		<mx:Label text="简述:"/>
	<mx:Text id="desc_id" text="{product.descript}"/>
	<mx:Spacer height="20"/>
	</mx:VBox>
	
	<s1:Button x="240" y="365" height="32" width="32" id="close_id" skinClass="{skin.BookBtnSkin}"  useHandCursor="true" buttonMode="true" alpha="0.9" mouseOver="close_id_mouseOverHandler(event)" mouseOut="close_id_mouseOutHandler(event)" click="{this.parentDocument.closeThis()}"/>
	<mx:Label text="末页" x="250" y="410"/>
</mx:Canvas>
